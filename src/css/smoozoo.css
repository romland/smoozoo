#smoozoo-glcanvas {
	overflow: hidden;
	margin: 0;
	display: block;
	cursor: grab;
}

#smoozoo-glcanvas.panning {
	cursor: grabbing;
}

.smoozoo-display {
	z-index: 2;
	position: fixed;
	background-color: rgba(0, 0, 0, 0.65);
	color: #ffffff;
	padding: 5px 15px;
	border-radius: 5px;
	border: 1px solid #444;
	font-family: Consolas, "Andale Mono", "Lucida Console", monospace;
	font-size: 14px;
	pointer-events: none;
	user-select: none;
}

#smoozoo-status-display {
	bottom: 5px;
	right: 10px;
}

#smoozoo-status-display p {
	margin: 4px 0;
	display: inline-block;
	white-space: nowrap;
}

body.ui-hidden #smoozoo-status-display,
body.ui-hidden #smoozoo-control-display {
	opacity: 0;
	pointer-events: none;
	transition: opacity 0.3s ease;
}


.pan-slider-container {
	pointer-events: auto !important;
}

p.narrow {
	width: 70px;
}

p.wide {
	width: 120px !important;
}

#smoozoo-status-display span {
	color: #82eefd;
}

#smoozoo-control-display {
	position: fixed;
	bottom: 40px;
	width: 15%;
	left: 50%;
	transform: translateX(-50%);
}

#smoozoo-pan-slider {
	background-color: rgba(0, 0, 0, 0.5);
	border: 3px solid rgba(255, 255, 255, 1);
	border-radius: 8px;
	width: 100%;
	-webkit-appearance: none;
	appearance: none;
	height: 8px;
	pointer-events: auto;
}


@media (max-width: 600px) {
	#smoozoo-status-display {
		bottom: auto;
		top: 0px;
		left: 10px;
		right: 10px;
		width: auto;
		text-align: left; /* Align content to the left */
	}
	
	#smoozoo-status-display p {
		margin: 5px 0;
	}
	
	/*
	Target zoom (1st), pixel size (3rd), AND file size (4th)
	to appear on the same line.
	*/
	#smoozoo-status-display p:first-of-type,
	#smoozoo-status-display p:nth-of-type(3),
	#smoozoo-status-display p:nth-of-type(4) {
		display: inline-block !important; /* !important to override .largedisplayonly */
		width: 20%;
		margin-right: 15px;
	}
	
	/* Target the filename (the last p) to be on its own line */
	#smoozoo-status-display p:last-of-type {
		display: block;
		width: 100%;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
		text-align: right;
	}
	
	#smoozoo-status-display p {
		display: block;
		margin: 2px 0;
	}
	
	/* Hide the pan slider, as touch panning is the primary method */
	#smoozoo-control-display {
		display: none;
	}
	
	.largedisplayonly {
		display: none !important;
	}
}

/* --- Loader Styles --- */
.loader-container {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 9999;
	
	display: flex;
	justify-content: center;
	align-items: center;
	
	background-color: rgba(14, 4, 34, 0.85); /* Matches your canvas background */
	backdrop-filter: blur(5px);
	opacity: 1;
	transition: opacity 0.5s ease;
}

/* class toggled by JS to hide the loader */
.loader-container.hidden {
	opacity: 0;
	pointer-events: none; /* Prevents interaction when hidden */
}

.loader-blobs {
	width: 150px;
	height: 150px;
	position: relative;
	filter: blur(12px) contrast(24);
}

.blob {
	position: absolute;
	top: 50%;
	left: 50%;
	width: 50px;
	height: 50px;
	background-color: #fff;
	border-radius: 50%;
	animation: move 3s infinite ease-in-out;
}

/* Use animation-delay to make the blobs move out of sync */
.blob:nth-child(2) {
	animation-delay: -1s;
}

.blob:nth-child(3) {
	animation-delay: -2s;
}

/* The Keyframe animation defining the blob's movement path */
@keyframes move {
	0%, 100% {
		transform: translate(-50%, -50%) translate(-35px, 0);
	}
	25% {
		transform: translate(-50%, -50%) translate(0, 35px);
	}
	50% {
		transform: translate(-50%, -50%) translate(35px, 0);
	}
	75% {
		transform: translate(-50%, -50%) translate(0, -35px);
	}
}

.loader-text {
	font-family: Helvetica, Arial, sans-serif;
	font-size: 2rem;
	letter-spacing: 0.1em;
	color: rgba(255, 255, 255, 0.3);
	position: relative;
	overflow: hidden;
}

/* The shimmer is a pseudo-element that wipes across the text */
.loader-text::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(100deg, transparent 20%, rgba(128, 128, 128, 0.9) 50%, transparent 80%);
	
	/* Animate the transform property */
	animation: shimmer 2.5s infinite;
}

@keyframes shimmer {
	0% {
		transform: translateX(-100%);
	}
	100% {
		transform: translateX(100%);
	}
}
